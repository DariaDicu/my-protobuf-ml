// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: primitives.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "primitives.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* SmallPrimitiveCollection_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SmallPrimitiveCollection_reflection_ = NULL;
const ::google::protobuf::Descriptor* FullPrimitiveCollection_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FullPrimitiveCollection_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_primitives_2eproto() {
  protobuf_AddDesc_primitives_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "primitives.proto");
  GOOGLE_CHECK(file != NULL);
  SmallPrimitiveCollection_descriptor_ = file->message_type(0);
  static const int SmallPrimitiveCollection_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmallPrimitiveCollection, my_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmallPrimitiveCollection, my_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmallPrimitiveCollection, my_string_),
  };
  SmallPrimitiveCollection_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SmallPrimitiveCollection_descriptor_,
      SmallPrimitiveCollection::default_instance_,
      SmallPrimitiveCollection_offsets_,
      -1,
      -1,
      -1,
      sizeof(SmallPrimitiveCollection),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmallPrimitiveCollection, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmallPrimitiveCollection, _is_default_instance_));
  FullPrimitiveCollection_descriptor_ = file->message_type(1);
  static const int FullPrimitiveCollection_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, my_int32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, my_int64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, my_uint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, my_uint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, my_sint32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, my_sint64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, my_fixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, my_fixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, my_sfixed32_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, my_sfixed64_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, my_bool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, my_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, my_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, my_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, my_float_),
  };
  FullPrimitiveCollection_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FullPrimitiveCollection_descriptor_,
      FullPrimitiveCollection::default_instance_,
      FullPrimitiveCollection_offsets_,
      -1,
      -1,
      -1,
      sizeof(FullPrimitiveCollection),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullPrimitiveCollection, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_primitives_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SmallPrimitiveCollection_descriptor_, &SmallPrimitiveCollection::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FullPrimitiveCollection_descriptor_, &FullPrimitiveCollection::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_primitives_2eproto() {
  delete SmallPrimitiveCollection::default_instance_;
  delete SmallPrimitiveCollection_reflection_;
  delete FullPrimitiveCollection::default_instance_;
  delete FullPrimitiveCollection_reflection_;
}

void protobuf_AddDesc_primitives_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020primitives.proto\"Q\n\030SmallPrimitiveColl"
    "ection\022\020\n\010my_int32\030\001 \001(\005\022\020\n\010my_int64\030\002 \001"
    "(\003\022\021\n\tmy_string\030\003 \001(\t\"\266\002\n\027FullPrimitiveC"
    "ollection\022\020\n\010my_int32\030\001 \001(\005\022\020\n\010my_int64\030"
    "\002 \001(\003\022\021\n\tmy_uint32\030\003 \001(\r\022\021\n\tmy_uint64\030\004 "
    "\001(\004\022\021\n\tmy_sint32\030\005 \001(\021\022\021\n\tmy_sint64\030\006 \001("
    "\022\022\022\n\nmy_fixed32\030\007 \001(\007\022\022\n\nmy_fixed64\030\010 \001("
    "\006\022\023\n\013my_sfixed32\030\t \001(\017\022\023\n\013my_sfixed64\030\n "
    "\001(\020\022\017\n\007my_bool\030\013 \001(\010\022\021\n\tmy_string\030\014 \001(\t\022"
    "\020\n\010my_bytes\030\r \001(\014\022\021\n\tmy_double\030\016 \001(\001\022\020\n\010"
    "my_float\030\017 \001(\002b\006proto3", 422);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "primitives.proto", &protobuf_RegisterTypes);
  SmallPrimitiveCollection::default_instance_ = new SmallPrimitiveCollection();
  FullPrimitiveCollection::default_instance_ = new FullPrimitiveCollection();
  SmallPrimitiveCollection::default_instance_->InitAsDefaultInstance();
  FullPrimitiveCollection::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_primitives_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_primitives_2eproto {
  StaticDescriptorInitializer_primitives_2eproto() {
    protobuf_AddDesc_primitives_2eproto();
  }
} static_descriptor_initializer_primitives_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SmallPrimitiveCollection::kMyInt32FieldNumber;
const int SmallPrimitiveCollection::kMyInt64FieldNumber;
const int SmallPrimitiveCollection::kMyStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SmallPrimitiveCollection::SmallPrimitiveCollection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SmallPrimitiveCollection)
}

void SmallPrimitiveCollection::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SmallPrimitiveCollection::SmallPrimitiveCollection(const SmallPrimitiveCollection& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SmallPrimitiveCollection)
}

void SmallPrimitiveCollection::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  my_int32_ = 0;
  my_int64_ = GOOGLE_LONGLONG(0);
  my_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SmallPrimitiveCollection::~SmallPrimitiveCollection() {
  // @@protoc_insertion_point(destructor:SmallPrimitiveCollection)
  SharedDtor();
}

void SmallPrimitiveCollection::SharedDtor() {
  my_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SmallPrimitiveCollection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SmallPrimitiveCollection::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SmallPrimitiveCollection_descriptor_;
}

const SmallPrimitiveCollection& SmallPrimitiveCollection::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_primitives_2eproto();
  return *default_instance_;
}

SmallPrimitiveCollection* SmallPrimitiveCollection::default_instance_ = NULL;

SmallPrimitiveCollection* SmallPrimitiveCollection::New(::google::protobuf::Arena* arena) const {
  SmallPrimitiveCollection* n = new SmallPrimitiveCollection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SmallPrimitiveCollection::Clear() {
  my_int32_ = 0;
  my_int64_ = GOOGLE_LONGLONG(0);
  my_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SmallPrimitiveCollection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SmallPrimitiveCollection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 my_int32 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &my_int32_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_my_int64;
        break;
      }

      // optional int64 my_int64 = 2;
      case 2: {
        if (tag == 16) {
         parse_my_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &my_int64_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_my_string;
        break;
      }

      // optional string my_string = 3;
      case 3: {
        if (tag == 26) {
         parse_my_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_my_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->my_string().data(), this->my_string().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SmallPrimitiveCollection.my_string"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SmallPrimitiveCollection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SmallPrimitiveCollection)
  return false;
#undef DO_
}

void SmallPrimitiveCollection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SmallPrimitiveCollection)
  // optional int32 my_int32 = 1;
  if (this->my_int32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->my_int32(), output);
  }

  // optional int64 my_int64 = 2;
  if (this->my_int64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->my_int64(), output);
  }

  // optional string my_string = 3;
  if (this->my_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->my_string().data(), this->my_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SmallPrimitiveCollection.my_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->my_string(), output);
  }

  // @@protoc_insertion_point(serialize_end:SmallPrimitiveCollection)
}

::google::protobuf::uint8* SmallPrimitiveCollection::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SmallPrimitiveCollection)
  // optional int32 my_int32 = 1;
  if (this->my_int32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->my_int32(), target);
  }

  // optional int64 my_int64 = 2;
  if (this->my_int64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->my_int64(), target);
  }

  // optional string my_string = 3;
  if (this->my_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->my_string().data(), this->my_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SmallPrimitiveCollection.my_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->my_string(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SmallPrimitiveCollection)
  return target;
}

int SmallPrimitiveCollection::ByteSize() const {
  int total_size = 0;

  // optional int32 my_int32 = 1;
  if (this->my_int32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->my_int32());
  }

  // optional int64 my_int64 = 2;
  if (this->my_int64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->my_int64());
  }

  // optional string my_string = 3;
  if (this->my_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->my_string());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SmallPrimitiveCollection::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SmallPrimitiveCollection* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SmallPrimitiveCollection>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SmallPrimitiveCollection::MergeFrom(const SmallPrimitiveCollection& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.my_int32() != 0) {
    set_my_int32(from.my_int32());
  }
  if (from.my_int64() != 0) {
    set_my_int64(from.my_int64());
  }
  if (from.my_string().size() > 0) {

    my_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.my_string_);
  }
}

void SmallPrimitiveCollection::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SmallPrimitiveCollection::CopyFrom(const SmallPrimitiveCollection& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmallPrimitiveCollection::IsInitialized() const {

  return true;
}

void SmallPrimitiveCollection::Swap(SmallPrimitiveCollection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SmallPrimitiveCollection::InternalSwap(SmallPrimitiveCollection* other) {
  std::swap(my_int32_, other->my_int32_);
  std::swap(my_int64_, other->my_int64_);
  my_string_.Swap(&other->my_string_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SmallPrimitiveCollection::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SmallPrimitiveCollection_descriptor_;
  metadata.reflection = SmallPrimitiveCollection_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SmallPrimitiveCollection

// optional int32 my_int32 = 1;
void SmallPrimitiveCollection::clear_my_int32() {
  my_int32_ = 0;
}
 ::google::protobuf::int32 SmallPrimitiveCollection::my_int32() const {
  // @@protoc_insertion_point(field_get:SmallPrimitiveCollection.my_int32)
  return my_int32_;
}
 void SmallPrimitiveCollection::set_my_int32(::google::protobuf::int32 value) {
  
  my_int32_ = value;
  // @@protoc_insertion_point(field_set:SmallPrimitiveCollection.my_int32)
}

// optional int64 my_int64 = 2;
void SmallPrimitiveCollection::clear_my_int64() {
  my_int64_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 SmallPrimitiveCollection::my_int64() const {
  // @@protoc_insertion_point(field_get:SmallPrimitiveCollection.my_int64)
  return my_int64_;
}
 void SmallPrimitiveCollection::set_my_int64(::google::protobuf::int64 value) {
  
  my_int64_ = value;
  // @@protoc_insertion_point(field_set:SmallPrimitiveCollection.my_int64)
}

// optional string my_string = 3;
void SmallPrimitiveCollection::clear_my_string() {
  my_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SmallPrimitiveCollection::my_string() const {
  // @@protoc_insertion_point(field_get:SmallPrimitiveCollection.my_string)
  return my_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SmallPrimitiveCollection::set_my_string(const ::std::string& value) {
  
  my_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SmallPrimitiveCollection.my_string)
}
 void SmallPrimitiveCollection::set_my_string(const char* value) {
  
  my_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SmallPrimitiveCollection.my_string)
}
 void SmallPrimitiveCollection::set_my_string(const char* value, size_t size) {
  
  my_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SmallPrimitiveCollection.my_string)
}
 ::std::string* SmallPrimitiveCollection::mutable_my_string() {
  
  // @@protoc_insertion_point(field_mutable:SmallPrimitiveCollection.my_string)
  return my_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SmallPrimitiveCollection::release_my_string() {
  
  return my_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SmallPrimitiveCollection::set_allocated_my_string(::std::string* my_string) {
  if (my_string != NULL) {
    
  } else {
    
  }
  my_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), my_string);
  // @@protoc_insertion_point(field_set_allocated:SmallPrimitiveCollection.my_string)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FullPrimitiveCollection::kMyInt32FieldNumber;
const int FullPrimitiveCollection::kMyInt64FieldNumber;
const int FullPrimitiveCollection::kMyUint32FieldNumber;
const int FullPrimitiveCollection::kMyUint64FieldNumber;
const int FullPrimitiveCollection::kMySint32FieldNumber;
const int FullPrimitiveCollection::kMySint64FieldNumber;
const int FullPrimitiveCollection::kMyFixed32FieldNumber;
const int FullPrimitiveCollection::kMyFixed64FieldNumber;
const int FullPrimitiveCollection::kMySfixed32FieldNumber;
const int FullPrimitiveCollection::kMySfixed64FieldNumber;
const int FullPrimitiveCollection::kMyBoolFieldNumber;
const int FullPrimitiveCollection::kMyStringFieldNumber;
const int FullPrimitiveCollection::kMyBytesFieldNumber;
const int FullPrimitiveCollection::kMyDoubleFieldNumber;
const int FullPrimitiveCollection::kMyFloatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FullPrimitiveCollection::FullPrimitiveCollection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FullPrimitiveCollection)
}

void FullPrimitiveCollection::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FullPrimitiveCollection::FullPrimitiveCollection(const FullPrimitiveCollection& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FullPrimitiveCollection)
}

void FullPrimitiveCollection::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  my_int32_ = 0;
  my_int64_ = GOOGLE_LONGLONG(0);
  my_uint32_ = 0u;
  my_uint64_ = GOOGLE_ULONGLONG(0);
  my_sint32_ = 0;
  my_sint64_ = GOOGLE_LONGLONG(0);
  my_fixed32_ = 0u;
  my_fixed64_ = GOOGLE_ULONGLONG(0);
  my_sfixed32_ = 0;
  my_sfixed64_ = GOOGLE_LONGLONG(0);
  my_bool_ = false;
  my_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  my_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  my_double_ = 0;
  my_float_ = 0;
}

FullPrimitiveCollection::~FullPrimitiveCollection() {
  // @@protoc_insertion_point(destructor:FullPrimitiveCollection)
  SharedDtor();
}

void FullPrimitiveCollection::SharedDtor() {
  my_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  my_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FullPrimitiveCollection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FullPrimitiveCollection::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FullPrimitiveCollection_descriptor_;
}

const FullPrimitiveCollection& FullPrimitiveCollection::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_primitives_2eproto();
  return *default_instance_;
}

FullPrimitiveCollection* FullPrimitiveCollection::default_instance_ = NULL;

FullPrimitiveCollection* FullPrimitiveCollection::New(::google::protobuf::Arena* arena) const {
  FullPrimitiveCollection* n = new FullPrimitiveCollection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FullPrimitiveCollection::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FullPrimitiveCollection*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(my_int64_, my_fixed64_);
  ZR_(my_sfixed64_, my_bool_);
  ZR_(my_double_, my_float_);
  my_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  my_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool FullPrimitiveCollection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FullPrimitiveCollection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 my_int32 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &my_int32_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_my_int64;
        break;
      }

      // optional int64 my_int64 = 2;
      case 2: {
        if (tag == 16) {
         parse_my_int64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &my_int64_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_my_uint32;
        break;
      }

      // optional uint32 my_uint32 = 3;
      case 3: {
        if (tag == 24) {
         parse_my_uint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &my_uint32_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_my_uint64;
        break;
      }

      // optional uint64 my_uint64 = 4;
      case 4: {
        if (tag == 32) {
         parse_my_uint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &my_uint64_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_my_sint32;
        break;
      }

      // optional sint32 my_sint32 = 5;
      case 5: {
        if (tag == 40) {
         parse_my_sint32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &my_sint32_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_my_sint64;
        break;
      }

      // optional sint64 my_sint64 = 6;
      case 6: {
        if (tag == 48) {
         parse_my_sint64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &my_sint64_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_my_fixed32;
        break;
      }

      // optional fixed32 my_fixed32 = 7;
      case 7: {
        if (tag == 61) {
         parse_my_fixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &my_fixed32_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_my_fixed64;
        break;
      }

      // optional fixed64 my_fixed64 = 8;
      case 8: {
        if (tag == 65) {
         parse_my_fixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &my_fixed64_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_my_sfixed32;
        break;
      }

      // optional sfixed32 my_sfixed32 = 9;
      case 9: {
        if (tag == 77) {
         parse_my_sfixed32:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &my_sfixed32_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_my_sfixed64;
        break;
      }

      // optional sfixed64 my_sfixed64 = 10;
      case 10: {
        if (tag == 81) {
         parse_my_sfixed64:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &my_sfixed64_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_my_bool;
        break;
      }

      // optional bool my_bool = 11;
      case 11: {
        if (tag == 88) {
         parse_my_bool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &my_bool_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_my_string;
        break;
      }

      // optional string my_string = 12;
      case 12: {
        if (tag == 98) {
         parse_my_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_my_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->my_string().data(), this->my_string().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FullPrimitiveCollection.my_string"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_my_bytes;
        break;
      }

      // optional bytes my_bytes = 13;
      case 13: {
        if (tag == 106) {
         parse_my_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_my_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_my_double;
        break;
      }

      // optional double my_double = 14;
      case 14: {
        if (tag == 113) {
         parse_my_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &my_double_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(125)) goto parse_my_float;
        break;
      }

      // optional float my_float = 15;
      case 15: {
        if (tag == 125) {
         parse_my_float:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &my_float_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FullPrimitiveCollection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FullPrimitiveCollection)
  return false;
#undef DO_
}

void FullPrimitiveCollection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FullPrimitiveCollection)
  // optional int32 my_int32 = 1;
  if (this->my_int32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->my_int32(), output);
  }

  // optional int64 my_int64 = 2;
  if (this->my_int64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->my_int64(), output);
  }

  // optional uint32 my_uint32 = 3;
  if (this->my_uint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->my_uint32(), output);
  }

  // optional uint64 my_uint64 = 4;
  if (this->my_uint64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->my_uint64(), output);
  }

  // optional sint32 my_sint32 = 5;
  if (this->my_sint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->my_sint32(), output);
  }

  // optional sint64 my_sint64 = 6;
  if (this->my_sint64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(6, this->my_sint64(), output);
  }

  // optional fixed32 my_fixed32 = 7;
  if (this->my_fixed32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(7, this->my_fixed32(), output);
  }

  // optional fixed64 my_fixed64 = 8;
  if (this->my_fixed64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(8, this->my_fixed64(), output);
  }

  // optional sfixed32 my_sfixed32 = 9;
  if (this->my_sfixed32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(9, this->my_sfixed32(), output);
  }

  // optional sfixed64 my_sfixed64 = 10;
  if (this->my_sfixed64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(10, this->my_sfixed64(), output);
  }

  // optional bool my_bool = 11;
  if (this->my_bool() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->my_bool(), output);
  }

  // optional string my_string = 12;
  if (this->my_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->my_string().data(), this->my_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FullPrimitiveCollection.my_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->my_string(), output);
  }

  // optional bytes my_bytes = 13;
  if (this->my_bytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->my_bytes(), output);
  }

  // optional double my_double = 14;
  if (this->my_double() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->my_double(), output);
  }

  // optional float my_float = 15;
  if (this->my_float() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->my_float(), output);
  }

  // @@protoc_insertion_point(serialize_end:FullPrimitiveCollection)
}

::google::protobuf::uint8* FullPrimitiveCollection::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FullPrimitiveCollection)
  // optional int32 my_int32 = 1;
  if (this->my_int32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->my_int32(), target);
  }

  // optional int64 my_int64 = 2;
  if (this->my_int64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->my_int64(), target);
  }

  // optional uint32 my_uint32 = 3;
  if (this->my_uint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->my_uint32(), target);
  }

  // optional uint64 my_uint64 = 4;
  if (this->my_uint64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->my_uint64(), target);
  }

  // optional sint32 my_sint32 = 5;
  if (this->my_sint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(5, this->my_sint32(), target);
  }

  // optional sint64 my_sint64 = 6;
  if (this->my_sint64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(6, this->my_sint64(), target);
  }

  // optional fixed32 my_fixed32 = 7;
  if (this->my_fixed32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(7, this->my_fixed32(), target);
  }

  // optional fixed64 my_fixed64 = 8;
  if (this->my_fixed64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(8, this->my_fixed64(), target);
  }

  // optional sfixed32 my_sfixed32 = 9;
  if (this->my_sfixed32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(9, this->my_sfixed32(), target);
  }

  // optional sfixed64 my_sfixed64 = 10;
  if (this->my_sfixed64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(10, this->my_sfixed64(), target);
  }

  // optional bool my_bool = 11;
  if (this->my_bool() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->my_bool(), target);
  }

  // optional string my_string = 12;
  if (this->my_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->my_string().data(), this->my_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FullPrimitiveCollection.my_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->my_string(), target);
  }

  // optional bytes my_bytes = 13;
  if (this->my_bytes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->my_bytes(), target);
  }

  // optional double my_double = 14;
  if (this->my_double() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->my_double(), target);
  }

  // optional float my_float = 15;
  if (this->my_float() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->my_float(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:FullPrimitiveCollection)
  return target;
}

int FullPrimitiveCollection::ByteSize() const {
  int total_size = 0;

  // optional int32 my_int32 = 1;
  if (this->my_int32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->my_int32());
  }

  // optional int64 my_int64 = 2;
  if (this->my_int64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->my_int64());
  }

  // optional uint32 my_uint32 = 3;
  if (this->my_uint32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->my_uint32());
  }

  // optional uint64 my_uint64 = 4;
  if (this->my_uint64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->my_uint64());
  }

  // optional sint32 my_sint32 = 5;
  if (this->my_sint32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->my_sint32());
  }

  // optional sint64 my_sint64 = 6;
  if (this->my_sint64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->my_sint64());
  }

  // optional fixed32 my_fixed32 = 7;
  if (this->my_fixed32() != 0) {
    total_size += 1 + 4;
  }

  // optional fixed64 my_fixed64 = 8;
  if (this->my_fixed64() != 0) {
    total_size += 1 + 8;
  }

  // optional sfixed32 my_sfixed32 = 9;
  if (this->my_sfixed32() != 0) {
    total_size += 1 + 4;
  }

  // optional sfixed64 my_sfixed64 = 10;
  if (this->my_sfixed64() != 0) {
    total_size += 1 + 8;
  }

  // optional bool my_bool = 11;
  if (this->my_bool() != 0) {
    total_size += 1 + 1;
  }

  // optional string my_string = 12;
  if (this->my_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->my_string());
  }

  // optional bytes my_bytes = 13;
  if (this->my_bytes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->my_bytes());
  }

  // optional double my_double = 14;
  if (this->my_double() != 0) {
    total_size += 1 + 8;
  }

  // optional float my_float = 15;
  if (this->my_float() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FullPrimitiveCollection::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FullPrimitiveCollection* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FullPrimitiveCollection>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FullPrimitiveCollection::MergeFrom(const FullPrimitiveCollection& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.my_int32() != 0) {
    set_my_int32(from.my_int32());
  }
  if (from.my_int64() != 0) {
    set_my_int64(from.my_int64());
  }
  if (from.my_uint32() != 0) {
    set_my_uint32(from.my_uint32());
  }
  if (from.my_uint64() != 0) {
    set_my_uint64(from.my_uint64());
  }
  if (from.my_sint32() != 0) {
    set_my_sint32(from.my_sint32());
  }
  if (from.my_sint64() != 0) {
    set_my_sint64(from.my_sint64());
  }
  if (from.my_fixed32() != 0) {
    set_my_fixed32(from.my_fixed32());
  }
  if (from.my_fixed64() != 0) {
    set_my_fixed64(from.my_fixed64());
  }
  if (from.my_sfixed32() != 0) {
    set_my_sfixed32(from.my_sfixed32());
  }
  if (from.my_sfixed64() != 0) {
    set_my_sfixed64(from.my_sfixed64());
  }
  if (from.my_bool() != 0) {
    set_my_bool(from.my_bool());
  }
  if (from.my_string().size() > 0) {

    my_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.my_string_);
  }
  if (from.my_bytes().size() > 0) {

    my_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.my_bytes_);
  }
  if (from.my_double() != 0) {
    set_my_double(from.my_double());
  }
  if (from.my_float() != 0) {
    set_my_float(from.my_float());
  }
}

void FullPrimitiveCollection::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FullPrimitiveCollection::CopyFrom(const FullPrimitiveCollection& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FullPrimitiveCollection::IsInitialized() const {

  return true;
}

void FullPrimitiveCollection::Swap(FullPrimitiveCollection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FullPrimitiveCollection::InternalSwap(FullPrimitiveCollection* other) {
  std::swap(my_int32_, other->my_int32_);
  std::swap(my_int64_, other->my_int64_);
  std::swap(my_uint32_, other->my_uint32_);
  std::swap(my_uint64_, other->my_uint64_);
  std::swap(my_sint32_, other->my_sint32_);
  std::swap(my_sint64_, other->my_sint64_);
  std::swap(my_fixed32_, other->my_fixed32_);
  std::swap(my_fixed64_, other->my_fixed64_);
  std::swap(my_sfixed32_, other->my_sfixed32_);
  std::swap(my_sfixed64_, other->my_sfixed64_);
  std::swap(my_bool_, other->my_bool_);
  my_string_.Swap(&other->my_string_);
  my_bytes_.Swap(&other->my_bytes_);
  std::swap(my_double_, other->my_double_);
  std::swap(my_float_, other->my_float_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FullPrimitiveCollection::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FullPrimitiveCollection_descriptor_;
  metadata.reflection = FullPrimitiveCollection_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FullPrimitiveCollection

// optional int32 my_int32 = 1;
void FullPrimitiveCollection::clear_my_int32() {
  my_int32_ = 0;
}
 ::google::protobuf::int32 FullPrimitiveCollection::my_int32() const {
  // @@protoc_insertion_point(field_get:FullPrimitiveCollection.my_int32)
  return my_int32_;
}
 void FullPrimitiveCollection::set_my_int32(::google::protobuf::int32 value) {
  
  my_int32_ = value;
  // @@protoc_insertion_point(field_set:FullPrimitiveCollection.my_int32)
}

// optional int64 my_int64 = 2;
void FullPrimitiveCollection::clear_my_int64() {
  my_int64_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 FullPrimitiveCollection::my_int64() const {
  // @@protoc_insertion_point(field_get:FullPrimitiveCollection.my_int64)
  return my_int64_;
}
 void FullPrimitiveCollection::set_my_int64(::google::protobuf::int64 value) {
  
  my_int64_ = value;
  // @@protoc_insertion_point(field_set:FullPrimitiveCollection.my_int64)
}

// optional uint32 my_uint32 = 3;
void FullPrimitiveCollection::clear_my_uint32() {
  my_uint32_ = 0u;
}
 ::google::protobuf::uint32 FullPrimitiveCollection::my_uint32() const {
  // @@protoc_insertion_point(field_get:FullPrimitiveCollection.my_uint32)
  return my_uint32_;
}
 void FullPrimitiveCollection::set_my_uint32(::google::protobuf::uint32 value) {
  
  my_uint32_ = value;
  // @@protoc_insertion_point(field_set:FullPrimitiveCollection.my_uint32)
}

// optional uint64 my_uint64 = 4;
void FullPrimitiveCollection::clear_my_uint64() {
  my_uint64_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 FullPrimitiveCollection::my_uint64() const {
  // @@protoc_insertion_point(field_get:FullPrimitiveCollection.my_uint64)
  return my_uint64_;
}
 void FullPrimitiveCollection::set_my_uint64(::google::protobuf::uint64 value) {
  
  my_uint64_ = value;
  // @@protoc_insertion_point(field_set:FullPrimitiveCollection.my_uint64)
}

// optional sint32 my_sint32 = 5;
void FullPrimitiveCollection::clear_my_sint32() {
  my_sint32_ = 0;
}
 ::google::protobuf::int32 FullPrimitiveCollection::my_sint32() const {
  // @@protoc_insertion_point(field_get:FullPrimitiveCollection.my_sint32)
  return my_sint32_;
}
 void FullPrimitiveCollection::set_my_sint32(::google::protobuf::int32 value) {
  
  my_sint32_ = value;
  // @@protoc_insertion_point(field_set:FullPrimitiveCollection.my_sint32)
}

// optional sint64 my_sint64 = 6;
void FullPrimitiveCollection::clear_my_sint64() {
  my_sint64_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 FullPrimitiveCollection::my_sint64() const {
  // @@protoc_insertion_point(field_get:FullPrimitiveCollection.my_sint64)
  return my_sint64_;
}
 void FullPrimitiveCollection::set_my_sint64(::google::protobuf::int64 value) {
  
  my_sint64_ = value;
  // @@protoc_insertion_point(field_set:FullPrimitiveCollection.my_sint64)
}

// optional fixed32 my_fixed32 = 7;
void FullPrimitiveCollection::clear_my_fixed32() {
  my_fixed32_ = 0u;
}
 ::google::protobuf::uint32 FullPrimitiveCollection::my_fixed32() const {
  // @@protoc_insertion_point(field_get:FullPrimitiveCollection.my_fixed32)
  return my_fixed32_;
}
 void FullPrimitiveCollection::set_my_fixed32(::google::protobuf::uint32 value) {
  
  my_fixed32_ = value;
  // @@protoc_insertion_point(field_set:FullPrimitiveCollection.my_fixed32)
}

// optional fixed64 my_fixed64 = 8;
void FullPrimitiveCollection::clear_my_fixed64() {
  my_fixed64_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 FullPrimitiveCollection::my_fixed64() const {
  // @@protoc_insertion_point(field_get:FullPrimitiveCollection.my_fixed64)
  return my_fixed64_;
}
 void FullPrimitiveCollection::set_my_fixed64(::google::protobuf::uint64 value) {
  
  my_fixed64_ = value;
  // @@protoc_insertion_point(field_set:FullPrimitiveCollection.my_fixed64)
}

// optional sfixed32 my_sfixed32 = 9;
void FullPrimitiveCollection::clear_my_sfixed32() {
  my_sfixed32_ = 0;
}
 ::google::protobuf::int32 FullPrimitiveCollection::my_sfixed32() const {
  // @@protoc_insertion_point(field_get:FullPrimitiveCollection.my_sfixed32)
  return my_sfixed32_;
}
 void FullPrimitiveCollection::set_my_sfixed32(::google::protobuf::int32 value) {
  
  my_sfixed32_ = value;
  // @@protoc_insertion_point(field_set:FullPrimitiveCollection.my_sfixed32)
}

// optional sfixed64 my_sfixed64 = 10;
void FullPrimitiveCollection::clear_my_sfixed64() {
  my_sfixed64_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 FullPrimitiveCollection::my_sfixed64() const {
  // @@protoc_insertion_point(field_get:FullPrimitiveCollection.my_sfixed64)
  return my_sfixed64_;
}
 void FullPrimitiveCollection::set_my_sfixed64(::google::protobuf::int64 value) {
  
  my_sfixed64_ = value;
  // @@protoc_insertion_point(field_set:FullPrimitiveCollection.my_sfixed64)
}

// optional bool my_bool = 11;
void FullPrimitiveCollection::clear_my_bool() {
  my_bool_ = false;
}
 bool FullPrimitiveCollection::my_bool() const {
  // @@protoc_insertion_point(field_get:FullPrimitiveCollection.my_bool)
  return my_bool_;
}
 void FullPrimitiveCollection::set_my_bool(bool value) {
  
  my_bool_ = value;
  // @@protoc_insertion_point(field_set:FullPrimitiveCollection.my_bool)
}

// optional string my_string = 12;
void FullPrimitiveCollection::clear_my_string() {
  my_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FullPrimitiveCollection::my_string() const {
  // @@protoc_insertion_point(field_get:FullPrimitiveCollection.my_string)
  return my_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FullPrimitiveCollection::set_my_string(const ::std::string& value) {
  
  my_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FullPrimitiveCollection.my_string)
}
 void FullPrimitiveCollection::set_my_string(const char* value) {
  
  my_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FullPrimitiveCollection.my_string)
}
 void FullPrimitiveCollection::set_my_string(const char* value, size_t size) {
  
  my_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FullPrimitiveCollection.my_string)
}
 ::std::string* FullPrimitiveCollection::mutable_my_string() {
  
  // @@protoc_insertion_point(field_mutable:FullPrimitiveCollection.my_string)
  return my_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FullPrimitiveCollection::release_my_string() {
  
  return my_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FullPrimitiveCollection::set_allocated_my_string(::std::string* my_string) {
  if (my_string != NULL) {
    
  } else {
    
  }
  my_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), my_string);
  // @@protoc_insertion_point(field_set_allocated:FullPrimitiveCollection.my_string)
}

// optional bytes my_bytes = 13;
void FullPrimitiveCollection::clear_my_bytes() {
  my_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FullPrimitiveCollection::my_bytes() const {
  // @@protoc_insertion_point(field_get:FullPrimitiveCollection.my_bytes)
  return my_bytes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FullPrimitiveCollection::set_my_bytes(const ::std::string& value) {
  
  my_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FullPrimitiveCollection.my_bytes)
}
 void FullPrimitiveCollection::set_my_bytes(const char* value) {
  
  my_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FullPrimitiveCollection.my_bytes)
}
 void FullPrimitiveCollection::set_my_bytes(const void* value, size_t size) {
  
  my_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FullPrimitiveCollection.my_bytes)
}
 ::std::string* FullPrimitiveCollection::mutable_my_bytes() {
  
  // @@protoc_insertion_point(field_mutable:FullPrimitiveCollection.my_bytes)
  return my_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FullPrimitiveCollection::release_my_bytes() {
  
  return my_bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FullPrimitiveCollection::set_allocated_my_bytes(::std::string* my_bytes) {
  if (my_bytes != NULL) {
    
  } else {
    
  }
  my_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), my_bytes);
  // @@protoc_insertion_point(field_set_allocated:FullPrimitiveCollection.my_bytes)
}

// optional double my_double = 14;
void FullPrimitiveCollection::clear_my_double() {
  my_double_ = 0;
}
 double FullPrimitiveCollection::my_double() const {
  // @@protoc_insertion_point(field_get:FullPrimitiveCollection.my_double)
  return my_double_;
}
 void FullPrimitiveCollection::set_my_double(double value) {
  
  my_double_ = value;
  // @@protoc_insertion_point(field_set:FullPrimitiveCollection.my_double)
}

// optional float my_float = 15;
void FullPrimitiveCollection::clear_my_float() {
  my_float_ = 0;
}
 float FullPrimitiveCollection::my_float() const {
  // @@protoc_insertion_point(field_get:FullPrimitiveCollection.my_float)
  return my_float_;
}
 void FullPrimitiveCollection::set_my_float(float value) {
  
  my_float_ = value;
  // @@protoc_insertion_point(field_set:FullPrimitiveCollection.my_float)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
